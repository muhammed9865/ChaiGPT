plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.9.1"
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
}

android {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    namespace 'com.salman.chaigpt'
    compileSdk 33

    defaultConfig {
        applicationId "com.salman.chaigpt"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    applicationVariants.all { variant ->
        variant.addJavaSourceFoldersToModel(
                new File(buildDir, "generated/ksp/${variant.name}/kotlin")
        )
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", 'OPEN_AI_KEY', "\"${localProperties.getProperty("OPEN_AI_KEY")}\""
            resValue "string", 'back4app_app_id', "${localProperties.getProperty("BACK4APP_APP_ID")}"
            resValue "string", 'back4app_client_key', "${localProperties.getProperty("BACK4APP_CLIENT_KEY")}"
            resValue "string", 'back4app_server_url', "${localProperties.getProperty("BACK4APP_SERVER_URL")}"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'


    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // logging interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"

    // Koin (DI)
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version_compose"
    implementation "io.insert-koin:koin-androidx-compose-navigation:$koin_version_compose"

    // Back4App Parse
    implementation "com.github.parse-community.Parse-SDK-Android:parse:$parse_version"

    // Startup Initialization
    implementation "androidx.startup:startup-runtime:$startup_version"

    // Proto DataStore
    implementation "androidx.datastore:datastore:$datastore_version"
    implementation  "com.google.protobuf:protobuf-javalite:$protobufVersion"

    // Compose Destinations (Navigation)
    implementation "io.github.raamcosta.compose-destinations:animations-core:$destination_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$destination_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.4"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}